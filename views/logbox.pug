doctype html
html
  head
    script.
      function ChatbroLoader(chats,async) {
        async=!1!==async;

        var params= {
          embedChatsParameters:chats instanceof Array?chats:[chats],
          lang:navigator.language||navigator.userLanguage,
          needLoadCode:'undefined'==typeof Chatbro,
          embedParamsVersion:localStorage.embedParamsVersion,
          chatbroScriptVersion:localStorage.chatbroScriptVersion
        },

        xhr=new XMLHttpRequest;
        xhr.withCredentials=!0,
        xhr.onload=function() {
          eval(xhr.responseText)
        },

        xhr.onerror=function() {
          console.error('Chatbro loading error')
        },

        xhr.open('GET','//www.chatbro.com/embed.js?' +
          btoa(unescape(encodeURIComponent(JSON.stringify(params)))),async),
          xhr.send()
      }
      ChatbroLoader({encodedChatId: '9czk',
        siteDomain: '#{domain}',
        siteUserExternalId: '#{userId}',
        siteUserFullName: '#{userName}',
        siteUserAvatarUrl: '#{urlAvatar}',
        siteUserProfileUrl: '#{urlProfile}',
        permissions: #{permStr},
        signature: '#{hash}',
        chatLanguage: '#{gettext("en")}'});
        
    link(rel="shortcut icon" href="/images/favicon_small.png" type="image/png")
      
    link(rel='stylesheet' type='text/css' href='./styles/body/body.css')
		
    link(rel='stylesheet' type='text/css' href='./styles/text/text.css')
    
    link(rel='stylesheet' type='text/css' href='./styles/header-bar/header-bar.css')
    link(rel='stylesheet' type='text/css' href='./styles/header-bar/__logo/header-bar__logo.css')
    link(rel='stylesheet' type='text/css' href='./styles/header-bar/__link-list/header-bar__link-list.css')
      
    link(rel='stylesheet' type='text/css' href='./styles/block/block.css')
    link(rel='stylesheet' type='text/css' href='./styles/form/form.css')
      
    link(rel='stylesheet' type='text/css' href='./styles/chatBro/chatBro.css')
    
    link(rel='stylesheet' type='text/css' href='./styles/title/title.css')
    
    link(rel='stylesheet' type='text/css' href='./styles/code/code.css')
    link(rel='stylesheet' type='text/css' href='./styles/code-form-for-title/code-form-for-title.css')
    link(rel='stylesheet' type='text/css' href='./styles/code-form/code-form.css')
    link(rel='stylesheet' type='text/css' href='./styles/code-form/__code-text/code-form__code-text.css')
      
    title #{gettext('Sample program ChatBro')}
        
  body
    div(class='header-bar')
      div(class='header-bar__basis')
        a(class='header-bar__logo' href='/')
          img(class='header-bar__logo__img' src='./images/favicon.png')
          p(class='header-bar__logo__title') ChatBro
        div(class='header-bar__link-list')
          div(style='float: left; height: 4em')
            a(class='header-bar__link-list__form' href='/profile')
              img(class='header-bar__link-list__form__img' src='./images/cat_avatar.jpeg')
              p(class='header-bar__link-list__form__link') #{userName}
              div(style='clear: both')
            div(class='header-bar__link-list__form__separator')
            div(style='clear: both')
          a(class='header-bar__link-list__form' style='float: right' href='/')
            p(class='header-bar__link-list__form__link' style='padding: 0px') #{gettext('Exit')}
          div(style='clear: both')
         
    div(class='block')
      div(class='form' style='height: 368px')
        p(class='title') #{gettext('Welcome')}, #{userName}!
        p(class='text') #{gettext('Now your nickname will be used in the chat. Click on the chat menu to delete messages or ban users.')}
        div(class='chatBro' style='height: 270px')
          div(id='chatbro' style='height: 100%')
        
    div(class='block')
      div(class='code')
        p(class='title') #{gettext('How is this page implemented on node.js')}
        div(class='code-form-for-title')
          p(class='code-form-for-title__text-title') #{gettext('Code snippet')} (
            a(href='https://github.com/SviatoIa/ChatBroSSO/blob/54bfa5634ee9f128d41281d6e37c8dda9dc8609a/chatbro_test.js#L16-L79') chatbro_test.js
            | ):
          div(class='code-form')
            p(class='code-form__code-text')
              span(class='code-form__code-text__comment') //#{gettext('Declare variables')}
              br
              br
              span(class='code-form__code-text__comment') //#{gettext('Chat domain')}
              br
              span(class='code-form__code-text__pink') const 
              | domain = 
              span(class='code-form__code-text__green') 'localhost'
              | ;
              br
              span(class='code-form__code-text__comment') //#{gettext('The secret key from the site')}
              br
              span(class='code-form__code-text__pink') const 
              | key = 
              span(class='code-form__code-text__green') '12b028c2-95e6-4297-8afd-0eb612c3d8fd'
              | ;
              br
              span(class='code-form__code-text__comment') //#{gettext('Your site user id')}
              br
              span(class='code-form__code-text__pink') let 
              | userId = Math.
              span(class='code-form__code-text__blue') floor
              | ((Math.
              span(class='code-form__code-text__blue') random
              | () * 100) + 1); 
              span(class='code-form__code-text__comment') //#{gettext('For example, use random')}
              br
              span(class='code-form__code-text__comment') //#{gettext('User name')}
              br
              span(class='code-form__code-text__pink') let 
              | userName;
              br
              span(class='code-form__code-text__comment') //#{gettext('User avatar url')}
              br
              span(class='code-form__code-text__pink') const 
              | urlAvatar = 
              span(class='code-form__code-text__green') 'http://localhost:91/images/cat_avatar.jpeg'
              | ;
              br
              span(class='code-form__code-text__comment') //#{gettext('User profile url')}
              br
              span(class='code-form__code-text__pink') const 
              | urlProfile = 
              span(class='code-form__code-text__green') '/profile'
              | ; 
              span(class='code-form__code-text__comment') //#{gettext('Relative reference to the profile')}
              br
              span(class='code-form__code-text__comment') //#{gettext('An array of allowed moderation methods')}
              br
              span(class='code-form__code-text__pink') let 
              | permissions = [];
              br
              br
              span(class='code-form__code-text__comment') //#{gettext('Read data from the first window')}
              br
              br
              span(class='code-form__code-text__red') app
              | .
              span(class='code-form__code-text__blue') post
              | (
              span(class='code-form__code-text__green') '/LogIn'
              | , function(req, res, next) {
              span(class='code-form__code-text__comment')  //LogIn - #{gettext("'action' of the form")}
              br
              span(class='code-form__code-text__tab') userName = 
              span(class='code-form__code-text__red') req.body.full_name
              | ; 
              span(class='code-form__code-text__comment') //full_name - #{gettext('the input field name')}
              br
              span(class='code-form__code-text__tab') permissions = [];
              br
              br
              span(class='code-form__code-text__pink code-form__code-text__tab') if
              |  (
              span(class='code-form__code-text__red') req.body.ban_check
              |  == 
              span(class='code-form__code-text__green') 'on'
              | ) 
              span(class='code-form__code-text__comment') //ban_check - #{gettext("checkbox with options 'ban'")}
              br
              span(class='code-form__code-text__double-tab') permissions.
              span(class='code-form__code-text__blue') push
              | (
              span(class='code-form__code-text__green') 'ban'
              | );
              br
              span(class='code-form__code-text__pink code-form__code-text__tab') if
              |  (
              span(class='code-form__code-text__red') req.body.del_check
              |  == 
              span(class='code-form__code-text__green') 'on'
              | ) 
              span(class='code-form__code-text__comment') //del_check - #{gettext('checkbox with options delete message')}
              br
              span(class='code-form__code-text__double-tab') permissions.
              span(class='code-form__code-text__blue') push
              | (
              span(class='code-form__code-text__green') 'delete'
              | );
              br
              br
              span(class='code-form__code-text__red code-form__code-text__tab') res
              | .
              span(class='code-form__code-text__blue') redirect
              | (
              span(class='code-form__code-text__green') '/logbox'
              | );
              br
              | });
              br
              br
              span(class='code-form__code-text__comment') //#{gettext('Get string of allowed moderation methods and calculate the hash')}
              br
              br
              span(class='code-form__code-text__pink') let 
              | permStr = permissions.
              span(class='code-form__code-text__blue') toString
              | ();
              br
              span(class='code-form__code-text__pink') let 
              | hash = crypto.createHash(
              span(class='code-form__code-text__green') 'md5'
              | ).update(domain + userId + userName + urlAvatar + urlProfile + permStr.
              span(class='code-form__code-text__blue') replace
              | (
              span(class='code-form__code-text__green') ','
              | , 
              span(class='code-form__code-text__green') ''
              | )
              | + key).digest(
              span(class='code-form__code-text__green') 'hex'
              | );
              br
              span(class='code-form__code-text__pink') if
              |  (
              span(class='code-form__code-text__red') permissions
              | .
              span(class='code-form__code-text__red') length
              |  > 0) {
              br
              span(class='code-form__code-text__tab') permStr = 
              span(class='code-form__code-text__green') '\''
              | + permStr + 
              span(class='code-form__code-text__green') '\''
              | ;
              br
              span(class='code-form__code-text__tab') permStr = permStr.
              span(class='code-form__code-text__blue') replace
              | (
              span(class='code-form__code-text__green') ','
              | , 
              span(class='code-form__code-text__green') '
              span(class='code-form__code-text__blue') \'
              span(class='code-form__code-text__green') , 
              span(class='code-form__code-text__blue') \'
              span(class='code-form__code-text__green') '
              | );
              | 
              br
              | }
              br
              | permStr = 
              span(class='code-form__code-text__green') '['
              | + permStr + 
              span(class='code-form__code-text__green') ']'
              | ;
          p(class='code-form-for-title__text-title') #{gettext('Code snippet')} (
            a(href='https://github.com/SviatoIa/ChatBroSSO/blob/54bfa5634ee9f128d41281d6e37c8dda9dc8609a/views/logbox.pug#L30-L38') logbox.pug
            | ):
          div(class='code-form')
            p(class='code-form__code-text')
              span(class='code-form__code-text__blue') ChatbroLoader
              | ({encodedChatId: 
              span(class='code-form__code-text__green') '6aNy'
              | ,
              br
              span(class='code-form__code-text__tab') siteDomain: 
              span(class='code-form__code-text__green') '\#{domain}'
              | , 
              br
              span(class='code-form__code-text__tab') siteUserExternalId: 
              span(class='code-form__code-text__green') '\#{userId}'
              | ,
              br
              span(class='code-form__code-text__tab') siteUserFullName: 
              span(class='code-form__code-text__green') '\#{userName}'
              | ,
              br
              span(class='code-form__code-text__tab') siteUserAvatarUrl: 
              span(class='code-form__code-text__green') '\#{urlAvatar}'
              | ,
              br
              span(class='code-form__code-text__tab') siteUserProfileUrl: 
              span(class='code-form__code-text__green') '\#{urlProfile}'
              | ,
              br
              span(class='code-form__code-text__tab') permissions: 
              span(class='code-form__code-text__green') \#{permStr}
              | ,
              br
              span(class='code-form__code-text__tab') signature: 
              span(class='code-form__code-text__green') '\#{hash}'
              | });
